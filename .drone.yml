---
kind: pipeline
name: lint

platform:
  os: linux
  arch: amd64

steps:
  - name: check-format
    image: python:3.11
    commands:
      - git fetch -tq
      - pip install poetry poetry-dynamic-versioning -qq
      - poetry install
      - poetry run yapf -dr ./gitbatch
    environment:
      PY_COLORS: 1

  - name: check-coding
    image: python:3.11
    commands:
      - git fetch -tq
      - pip install poetry poetry-dynamic-versioning -qq
      - poetry install
      - poetry run ruff ./gitbatch
    environment:
      PY_COLORS: 1

trigger:
  ref:
    - refs/heads/main
    - refs/tags/**
    - refs/pull/**

---
kind: pipeline
name: test

platform:
  os: linux
  arch: amd64

steps:
  - name: fetch
    image: python:3.11
    commands:
      - git fetch -tq

  - name: python37-pytest
    image: python:3.7
    commands:
      - pip install poetry poetry-dynamic-versioning -qq
      - poetry install
      - poetry version
      - poetry run git-batch --help
    environment:
      PY_COLORS: 1
    depends_on:
      - fetch

  - name: python38-pytest
    image: python:3.8
    commands:
      - pip install poetry poetry-dynamic-versioning -qq
      - poetry install
      - poetry version
      - poetry run git-batch --help
    environment:
      PY_COLORS: 1
    depends_on:
      - fetch

  - name: python39-pytest
    image: python:3.9
    commands:
      - pip install poetry poetry-dynamic-versioning -qq
      - poetry install
      - poetry version
      - poetry run git-batch --help
    environment:
      PY_COLORS: 1
    depends_on:
      - fetch

  - name: python310-pytest
    image: python:3.10
    commands:
      - pip install poetry poetry-dynamic-versioning -qq
      - poetry install
      - poetry version
      - poetry run git-batch --help
    environment:
      PY_COLORS: 1
    depends_on:
      - fetch

  - name: python311-pytest
    image: python:3.11
    commands:
      - pip install poetry poetry-dynamic-versioning -qq
      - poetry install
      - poetry version
      - poetry run git-batch --help
    environment:
      PY_COLORS: 1
    depends_on:
      - fetch

trigger:
  ref:
    - refs/heads/main
    - refs/tags/**
    - refs/pull/**

depends_on:
  - lint

---
kind: pipeline
name: build-package

platform:
  os: linux
  arch: amd64

steps:
  - name: build
    image: python:3.11
    commands:
      - git fetch -tq
      - pip install poetry poetry-dynamic-versioning -qq
      - poetry build

  - name: checksum
    image: alpine
    commands:
      - cd dist/ && sha256sum * > ../sha256sum.txt

  - name: changelog-generate
    image: thegeeklab/git-chglog
    commands:
      - git fetch -tq
      - git-chglog --no-color --no-emoji -o CHANGELOG.md ${DRONE_TAG:---next-tag unreleased unreleased}

  - name: changelog-format
    image: thegeeklab/alpine-tools
    commands:
      - prettier CHANGELOG.md
      - prettier -w CHANGELOG.md

  - name: publish-github
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_token
      files:
        - dist/*
        - sha256sum.txt
      note: CHANGELOG.md
      overwrite: true
      title: ${DRONE_TAG}
    when:
      ref:
        - refs/tags/**

  - name: publish-pypi
    image: python:3.11
    commands:
      - git fetch -tq
      - pip install poetry poetry-dynamic-versioning -qq
      - poetry publish -n
    environment:
      POETRY_HTTP_BASIC_PYPI_PASSWORD:
        from_secret: pypi_password
      POETRY_HTTP_BASIC_PYPI_USERNAME:
        from_secret: pypi_username
    when:
      ref:
        - refs/tags/**

trigger:
  ref:
    - refs/heads/main
    - refs/tags/**
    - refs/pull/**

depends_on:
  - test

---
kind: pipeline
name: build-container

platform:
  os: linux
  arch: amd64

steps:
  - name: build
    image: python:3.11
    commands:
      - git fetch -tq
      - pip install poetry poetry-dynamic-versioning -qq
      - poetry build

  - name: dryrun
    image: thegeeklab/drone-docker-buildx:23
    settings:
      dockerfile: Dockerfile.multiarch
      dry_run: true
      platforms:
        - linux/amd64
        - linux/arm64
      provenance: false
      repo: thegeeklab/${DRONE_REPO_NAME}
    when:
      ref:
        - refs/pull/**
    depends_on:
      - build

  - name: publish-dockerhub
    image: thegeeklab/drone-docker-buildx:23
    settings:
      auto_tag: true
      dockerfile: Dockerfile.multiarch
      password:
        from_secret: docker_password
      platforms:
        - linux/amd64
        - linux/arm64
      provenance: false
      repo: thegeeklab/${DRONE_REPO_NAME}
      username:
        from_secret: docker_username
    when:
      ref:
        - refs/heads/main
        - refs/tags/**
    depends_on:
      - dryrun

  - name: publish-quay
    image: thegeeklab/drone-docker-buildx:23
    settings:
      auto_tag: true
      dockerfile: Dockerfile.multiarch
      password:
        from_secret: quay_password
      platforms:
        - linux/amd64
        - linux/arm64
      provenance: false
      registry: quay.io
      repo: quay.io/thegeeklab/${DRONE_REPO_NAME}
      username:
        from_secret: quay_username
    when:
      ref:
        - refs/heads/main
        - refs/tags/**
    depends_on:
      - dryrun

trigger:
  ref:
    - refs/heads/main
    - refs/tags/**
    - refs/pull/**

depends_on:
  - test

---
kind: pipeline
name: notifications

platform:
  os: linux
  arch: amd64

steps:
  - name: pushrm-dockerhub
    image: chko/docker-pushrm:1
    environment:
      DOCKER_PASS:
        from_secret: docker_password
      DOCKER_USER:
        from_secret: docker_username
      PUSHRM_FILE: README.md
      PUSHRM_SHORT: GitHub release notification bot
      PUSHRM_TARGET: thegeeklab/${DRONE_REPO_NAME}
    when:
      status:
        - success

  - name: pushrm-quay
    image: chko/docker-pushrm:1
    environment:
      APIKEY__QUAY_IO:
        from_secret: quay_token
      PUSHRM_FILE: README.md
      PUSHRM_TARGET: quay.io/thegeeklab/${DRONE_REPO_NAME}
    when:
      status:
        - success

  - name: matrix
    image: thegeeklab/drone-matrix
    settings:
      homeserver:
        from_secret: matrix_homeserver
      password:
        from_secret: matrix_password
      roomid:
        from_secret: matrix_roomid
      template: "Status: **{{ .Build.Status }}**<br/> Build: [{{ .Repo.Owner }}/{{ .Repo.Name }}]({{ .Build.Link }}){{ if .Build.Branch }} ({{ .Build.Branch }}){{ end }} by {{ .Commit.Author }}<br/> Message: {{ .Commit.Message.Title }}"
      username:
        from_secret: matrix_username
    when:
      status:
        - success
        - failure

trigger:
  ref:
    - refs/heads/main
    - refs/tags/**
  status:
    - success
    - failure

depends_on:
  - build-package
  - build-container

---
kind: signature
hmac: 3788e000ef7c4f80a3d97a4b903fe56748673e9eec42f969d629e8f600afdd53

...
